version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - '9092:9092'
      - '29094:29094'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: LISTENER_BOB://kafka0:29092,LISTENER_FRED://kafka0:9092,LISTENER_ALICE://kafka0:29094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka0:29092,LISTENER_FRED://localhost:9092,LISTENER_ALICE://never-gonna-give-you-up:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  inmem:
    image: redis
    networks:
      - test-xm

  xm-db:
    container_name: "xm-db"
    image: postgres:latest
    networks:
      - test-xm
    restart: always
    ports: 
      - 5700:${POSTGRES_PORT}
    depends_on: 
      - zookeeper
      - broker
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  app-test-xm:
    container_name: app-test-xm
    image: app-test-xm
    build:
      context: .
      dockerfile: Dockerfile
    depends_on: 
      - zookeeper
      - broker
      - xm-db
    env_file:
      - .env
    restart: on-failure
    tty: true
    ports:
      - "7711:${PORT}"
    environment:
      ENDPOINT_URL: ${ENDPOINT_URL}
      ENV: ${ENV}
      JWT_EXPIRY_SEC: ${JWT_EXPIRY_SEC}
      JWT_KEY: ${JWT_KEY}
      LOG_LEVEL: ${LOG_LEVEL}
      PORT: ${PORT}
      SERVICE_NAME: ${SERVICE_NAME}
      VERSION: ${VER}
      
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_TIMEOUT_SEC: ${POSTGRES_TIMEOUT_SEC}
      POSTGRES_USER: ${POSTGRES_USER}

      REDIS_HOST: inmem
      REDIS_PORT: ${REDIS_PORT}
      REDIS_EXPIRY_SEC: ${REDIS_EXPIRY_SEC}
    networks:
      - test-xm
      
networks: 
  test-xm:
    driver: bridge

volumes:
  pgdata: