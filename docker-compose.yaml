version: '3.8'

services:
  inmem:
    image: redis
    networks:
      - test-xm

  xm-db:
    container_name: "xm-db"
    image: postgres:latest
    networks:
      - test-xm
    restart: always
    ports: 
      - 5700:${POSTGRES_PORT}
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  app-test-xm:
    container_name: app-test-xm
    image: app-test-xm
    build:
      context: .
      dockerfile: Dockerfile
    depends_on: 
      - xm-db
    env_file:
      - .env
    restart: on-failure
    tty: true
    ports:
      - "7711:${PORT}"
      - "7712:${H_PORT}"
    environment:
      ENDPOINT_URL: ${ENDPOINT_URL}
      ENV: ${ENV}
      JWT_EXPIRY_SEC: ${JWT_EXPIRY_SEC}
      JWT_KEY: ${JWT_KEY}
      LOG_LEVEL: ${LOG_LEVEL}
      PORT: ${PORT}
      SERVICE_NAME: ${SERVICE_NAME}
      VERSION: ${VER}
      
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_TIMEOUT_SEC: ${POSTGRES_TIMEOUT_SEC}
      POSTGRES_USER: ${POSTGRES_USER}

      REDIS_HOST: inmem
      REDIS_PORT: ${REDIS_PORT}
      REDIS_EXPIRY_SEC: ${REDIS_EXPIRY_SEC}
    networks:
      - test-xm
      
networks: 
  test-xm:
    driver: bridge

volumes:
  pgdata: